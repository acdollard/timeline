---
import data from "../data.json";

// Find the birth date and calculate the total timeline span
const birthEvent = data.find((item) => item.type === "birth");
if (!birthEvent) {
  throw new Error("No birth event found in the data");
}

const birthDate = new Date(birthEvent.date);
const today = new Date();
const totalDays = Math.ceil(
  (today.getTime() - birthDate.getTime()) / (1000 * 60 * 60 * 24)
);

// Calculate position for each event
const eventsWithPosition = data.map((item) => {
  const eventDate = new Date(item.date);
  const daysSinceBirth = Math.ceil(
    (eventDate.getTime() - birthDate.getTime()) / (1000 * 60 * 60 * 24)
  );
  const position = (daysSinceBirth / totalDays) * 100;
  return { ...item, position };
});
---

<div class="timeline-container flex flex-col h-auto">
  <div id="timeline-line" class="bg-white h-1 flex flex-row relative">
    {
      eventsWithPosition.map((item) =>
        item.type === "birth" ? (
          <div class="h-6 w-6 hover:h-10 hover:w-10 bg-white rounded-full transition-all duration-200 absolute top-0.5 -translate-y-1/2" />
        ) : (
          <div
            class="flex flex-col h-auto absolute"
            style={`left: ${item.position}%; transform: translateX(-50%)`}
          >
            <div class="pin relative rotate-180">
              <div class="event h-6 w-6 hover:h-10 hover:w-10 bg-green-500 rounded-full transition-all duration-200 absolute left-1/2 -translate-x-1/2" />
              <div class="h-20 w-0.5 bg-white mx-auto" />
            </div>
          </div>
        )
      )
    }
  </div>
</div>

<style>
  .timeline-container {
    position: relative;
    width: 100%;
  }

  #timeline-line {
    width: 100%;
    position: relative;
  }
</style>
